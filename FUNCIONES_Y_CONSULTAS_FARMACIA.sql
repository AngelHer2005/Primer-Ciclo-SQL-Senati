USE FARMACIA
GO
--LEFT - RIGHT

--MOSTRAR LAS TB PEDIDOS Y CLIENTES
GO

--FULL JOIN COMPARTE TODOS LOS DATOS DE 2 TABLAS, EL INNER JOIN, RIGHT Y LEFT.
SELECT P.*,C.Nombre_cli, C.Apellido_cli,C.Celular
FROM Pedido P FULL JOIN Cliente C ON P.IdCliente = C.IdCliente

SELECT P.*,C.Nombre_cli, C.Apellido_cli,C.Celular
FROM Pedido P JOIN Cliente C ON P.IdCliente = C.IdCliente

GO
/*EXPRESIONES
SUM
AVG
COUNT
MAX
MIN
*/

--MOSTRAR LOS PRODUCTOS QUE TENGAN EL MAYOR Y MENOR PRECIO
SELECT NOMBRE_PRO, PRE_VENTA FROM PRODUCTO
WHERE Pre_venta=(SELECT MAX(P.Pre_venta) FROM Producto P)
UNION
SELECT NOMBRE_PRO, PRE_VENTA FROM PRODUCTO
WHERE Pre_venta=(SELECT MIN(P.Pre_venta) FROM Producto P)
GO 

SELECT NOMBRE_PRO, PRE_VENTA FROM PRODUCTO
WHERE Pre_venta=(SELECT AVG(P.Pre_venta) FROM Producto P)
UNION
SELECT NOMBRE_PRO, PRE_VENTA FROM PRODUCTO
WHERE Pre_venta=(SELECT SUM(P.Pre_venta) FROM Producto P)
GO
--MOSTRAR EL NOMBRE DEL SERVIDOR
DECLARE @MYXML XML --XML FORMATO ALMACENA ETIQUETAS, ATRIBUTOS
SET @MYXML=(SELECT @@SERVERNAME NOMBRE FOR XML RAW, TYPE)
PRINT CAST(@MYXML AS VARCHAR(MAX))
GO

--EL PROMEDIO DE PRECIO COMPRA
GO
DECLARE @PROM MONEY
SELECT @PROM=AVG(PRE_COMPRA) FROM PRODUCTO
PRINT 'EL PROMEDIO ES: '+STR(@PROM)
GO
DECLARE @PROM MONEY
SELECT @PROM=SUM(PRE_COMPRA) FROM PRODUCTO
PRINT 'EL PROMEDIO ES: '+STR(@PROM)

GO
SELECT * FROM CLIENTE
GO

--MOSTRAR EL NOMBRE DEL CLIENTE MEDIANTE SU CÓDIGO
GO
DECLARE @NOM VARCHAR(40)
SELECT @NOM=(SELECT NOMBRE_CLI FROM CLIENTE WHERE IdCliente = 'C003')
PRINT 'EL NOMBRE DEL CÓDIGO C003 ES: '+@NOM
GO
DECLARE @NOM_APE VARCHAR(40)
SELECT @NOM_APE=(SELECT NOMBRE_CLI+SPACE(1)+Apellido_cli FROM CLIENTE WHERE IdCliente = 'C003')
PRINT 'EL NOMBRE DEL CÓDIGO C003 ES: '+@NOM_APE
GO
--VARIABLES PÚBLICAS
GO
--VERSIÓN DEL SQL
PRINT 'VERSION: '+@@VERSION
GO
--LENGUAJE DEL APLICATIVO
GO
PRINT 'LANGUAJE: '+@@LANGUAGE
--NOMBRE DEL SERVIDOR
GO
PRINT 'NOMBRE SERVIDOR: '+@@SERVERNAME
--CONEXIONES A REALIZAR
GO
PRINT 'CONEXIONES: '+STR(@@MAX_CONNECTIONS)
GO
--FUNCIONES
GO
/*
FUNCIÓN ESCALAR: RETORNA VALORES ÚNICOS
*/
--EJEMPLO RETORNAR EL PRECIO PROMEDIO DE UN PRODUCTO
GO
CREATE FUNCTION DBO.PRECIOPROMEDIO() RETURNS MONEY
AS
	BEGIN
		DECLARE @PROME MONEY
		SELECT @PROME=AVG(PRE_VENTA) FROM PRODUCTO
		RETURN @PROME
	END
GO
PRINT DBO.PRECIOPROMEDIO()

--SUMA
CREATE FUNCTION DBO.PRECIOSUMA() RETURNS MONEY
AS
	BEGIN
		DECLARE @SUMA MONEY
		SELECT @SUMA=SUM(PRE_VENTA) FROM PRODUCTO
		RETURN @SUMA
	END
GO
PRINT DBO.PRECIOSUMA()
--MÁXIMO
CREATE FUNCTION DBO.PRECIOMAXIMO() RETURNS MONEY
AS
	BEGIN
		DECLARE @MAX MONEY
		SELECT @MAX=MAX(PRE_VENTA) FROM PRODUCTO
		RETURN @MAX
	END
GO
PRINT DBO.PRECIOMAXIMO()
--MÍNIMO
CREATE FUNCTION DBO.PRECIOMINIMO() RETURNS MONEY
AS
	BEGIN
		DECLARE @MIN MONEY
		SELECT @MIN=MIN(PRE_VENTA) FROM PRODUCTO
		RETURN @MIN
	END
GO
PRINT DBO.PRECIOMINIMO()
--MODA
CREATE FUNCTION DBO.PRECIOMODA() RETURNS MONEY
AS
	BEGIN
		DECLARE @MODA MONEY;
		WITH CONTADOR AS (
			SELECT PRE_VENTA, COUNT(*) AS cnt
			FROM PRODUCTO
			GROUP BY PRE_VENTA
		)
		SELECT TOP 1 @MODA = PRE_VENTA
		FROM CONTADOR
	    ORDER BY cnt DESC
    RETURN @MODA
END
GO
PRINT 'MODA: '+ STR(DBO.PRECIOMODA())


--MEDIANA
CREATE FUNCTION DBO.PRECIOMEDIANA() RETURNS MONEY
AS
	BEGIN
		DECLARE @MEDIANA MONEY;
		WITH ORDEN AS (
			SELECT PRE_VENTA, ROW_NUMBER() OVER (ORDER BY PRE_VENTA) AS NUMERO_FILA,
			COUNT(*) OVER () AS TOTAL
			FROM PRODUCTO
		)
		SELECT @MEDIANA = AVG(PRE_VENTA)
		FROM ORDEN
	    WHERE NUMERO_FILA IN ((TOTAL + 1) / 2, (TOTAL + 2) / 2);
    RETURN @MEDIANA
END
GO
PRINT 'MEDIANA: '+STR(DBO.PRECIOMEDIANA())

PRINT 'PROMEDIO: '+STR(DBO.PRECIOPROMEDIO())
PRINT 'SUMA: '+STR(DBO.PRECIOSUMA())
PRINT 'MÁXIMO: '+STR(DBO.PRECIOMAXIMO())
PRINT 'MÍNIMO: '+STR(DBO.PRECIOMINIMO())
PRINT 'MODA: '+STR(DBO.PRECIOMODA())
PRINT 'MEDIANA: '+STR(DBO.PRECIOMEDIANA())

/*
FUNCIÓN DE TABLA
*/
GO
CREATE FUNCTION TEMPLEADOS()
RETURNS TABLE
AS
	RETURN(SELECT D.IdDistrito CÓDIGO,D.Nombre_Dis NOMBRE_DISTRITO,E.NOMBRE_EMP,E.APELLIDO_EMP,E.DIRECCION_EMP "DIRECCIÓN"
	FROM Empleado E JOIN DISTRITO D ON E.IdDistrito = D.IdDistrito)
GO
SELECT * FROM TEMPLEADOS() WHERE NOMBRE_DISTRITO='RIMAC'

/*
FUNCIÓN CON VALORES DE LÍNEA(MULTISENTENCIAS)---PA
*/
SELECT * FROM Producto
GO
--EJEMPLO RETORNAR LOS PRODUCTOS REGISTRADOS EN LA BD SU CÓDIGO,
--NOMBRE, PRECIO, VENTA Y STOCK
GO
CREATE FUNCTION DBO.INVENTARIO()
RETURNS @TABLA TABLE(
IDPRODUCTO CHAR(8),
NOMBRE VARCHAR(40),
PRECIO_V MONEY,
STOCK INT
)
AS
	BEGIN
		INSERT INTO @TABLA SELECT IDPRODUCTO,
		NOMBRE_PRO,PRE_VENTA, STOCK FROM Producto
		RETURN
	END
GO
SELECT * FROM DBO.INVENTARIO()

--VISTAS:
--Ejemplo 1
SELECT       Nombre_cli, Apellido_cli, DNI
FROM            dbo.Cliente

--Ejemplo 2
SELECT       dbo.Empleado.Nombre_Emp, dbo.Empleado.Apellido_Emp, dbo.Empleado.Edad, dbo.Empleado.Celular
FROM            dbo.Distrito INNER JOIN
                         dbo.Empleado ON dbo.Distrito.IdDistrito = dbo.Empleado.IdDistrito

--Modificado 3
SELECT       dbo.Distrito.Nombre_Dis, dbo.Empleado.Nombre_Emp, dbo.Empleado.Apellido_Emp, dbo.Empleado.Edad, dbo.Empleado.Celular, dbo.Cargo.Nombre, dbo.Cargo.Descripcion
FROM            dbo.Distrito INNER JOIN
                         dbo.Empleado ON dbo.Distrito.IdDistrito = dbo.Empleado.IdDistrito INNER JOIN
                         dbo.Cargo ON dbo.Empleado.Cargo = dbo.Cargo.IdCargo

--Deseo mostrar los empleados que residan en distrito
GO
CREATE VIEW EMPLEDAD
AS
	SELECT Nombre_Emp,Apellido_Emp,Edad FROM Empleado WHERE Edad>30
GO

SELECT * FROM EMPLEDAD
GO
SELECT * FROM VIEW_1
GO
SELECT * FROM VIEW_2
GO
SELECT * FROM VIEW_3
/*
TAREA:
1.- MOSTRAR TODOS LOS REGISTROS DE LA TABLA PROVEEDOR
2.- LISTAR LOS PRODUCTOS CUYA LETRA EMPIEZA CON H
3.- LISTAR LOS PRODUCTOS CUYA PRIMERA LETRA EMPIEZA CON A Y EL TERCER CARÁCTER CON O
4.- LISTAR LOS PRODUCTOS CUYO NOMBRE EMPIEZA CON CUALQUIER RANGO QUE VA DE C A LA G
5.- LISTA DE PRODUCTOS CUYO NOMBRE EMPIEZA CON LA PALABRA FLUTOX
6.- LISTA LOS NOMBRES DE LOS EMPLEADOS CUYO SEGUNDO CARÁCTER COMIENZA CON I
7.- LISTAR LOS DISTRITOS CUYO NOMBRE INICIA CON C, R, S
8.- SELECCIONAR TODOS LOS NOMBRES DE LOS PROVEEDORES QUE TERMINEN CON A, R
9.- LISTA DE PRODUCTO CUYO PRECIO DE COMPRA ESTÉ ENTRE EL RANGO DE 8 A 13 NUEVOS SOLES
10.- VISUALIZAR LOS PRODUCTOS REALIZADOS EN EL AÑO 2021
*/
SELECT * FROM Proveedor
SELECT * FROM Producto
SELECT * FROM Empleado
SELECT * FROM Distrito

--1.
SELECT * FROM Proveedor

--2.
SELECT Nombre_Pro FROM Producto
WHERE Nombre_Pro LIKE 'H%'

--3.
SELECT Nombre_Pro FROM Producto
WHERE Nombre_Pro LIKE 'A_O%'

--4.
SELECT Nombre_Pro FROM Producto
WHERE Nombre_Pro LIKE '[C-G]%'

--5.
SELECT Nombre_Pro FROM Producto
WHERE Nombre_Pro LIKE 'FLUTOX%'

--6.
SELECT Nombre_Emp FROM Empleado
WHERE Nombre_Emp LIKE '_I%'

--7.
SELECT Nombre_Dis FROM Distrito
WHERE Nombre_Dis LIKE 'C%' OR Nombre_Dis LIKE 'R%' OR Nombre_Dis LIKE 'S%'

--8. 
SELECT Nombre_Prove FROM Proveedor
WHERE Nombre_Prove LIKE '%A' OR Nombre_Prove LIKE '%R'

--9.
SELECT Nombre_Pro FROM Producto
WHERE Pre_venta BETWEEN 8 AND 13

--10. 
SELECT Nombre_Pro FROM Producto
WHERE YEAR(Fecha_venc) = 2021
